pipeline {
     agent {
        dockerfile {
            filename "copy.dockerfile"
            args '--volume /home/jenkins/public_html:/home/jenkins/public_html'
        }
    }

    environment {
        Repo = "/home/jenkins/public_html/repo"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {
        stage ('Prepare') {
            steps {
                sh "mkdir -p ${env.Repo}"
            }
        }
        stage ('Copy') {
            parallel {
                stage('Copy Platform') {
                    steps {
                        script {
                            step ([$class: 'CopyArtifact',
                                   projectName: 'Full Platform',
                               filter: "*",
                                   target: "${env.Repo}/Platform"]);
                        }
                    }
                }
                stage('Copy Eve') {
                    steps {
                        script {
                            step ([$class: 'CopyArtifact',
                                   projectName: 'E-venement',
                                   filter: "*",
                                   target: "${env.Repo}/Eve"]);
                        }
                    }
                }
            }
        }
        stage ('Clean') {
            steps {
                sh "ls -t | head -n3 # add a rm for file not in list"
            }
        }
    }
    post {
        always {
            cleanWs()

        }
    }
}
