pipeline {
    agent any

    parameters {
        string(defaultValue: '7.1', description: 'Version of Php', name: 'phpVer')
        string(defaultValue: 'Platform', description: 'Project Name', name: 'Project')
        string(defaultValue: 'master', description: 'Git(or job) Branch Name', name: 'Branch')
        string(defaultValue: 'sandboxrd.libre-informatique.fr', description: 'Base Url', name: 'Hostname')
    }

    environment {
        apachePort = sh(returnStdout: true, script: "echo 80${params.phpVer} | sed -e s/'\\.'//g").trim()
        Target = "/home/jenkins/public_html/"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {

        stage ('Check') {
            steps {
                sh "docker exec -u root apache-cnt-${params.phpVer} service apache2 status"
           }
        }
        stage ('Deploy') {
            steps {
                sh "Branch=${params.Branch} Name=${params.Project} Url=${params.Hostname} ./deploy_archive.sh"
            }
        }
        /* Todo should check if database exist in some kind of prod scripts*/
    /*    stage ('Create Database') {
            steps {
                sh "docker exec -u jenkins -it -w /home/jenkins/public_html/${params.Branch}/ apache-cnt-${params.phpVer} bin/ci-scripts/set_db_host_test.sh"
                sh "docker exec -u jenkins -it -w /home/jenkins/public_html/${params.Branch}/ apache-cnt-${params.phpVer} bin/ci-scripts/create_database_test.sh"
                sh "docker exec -u jenkins -it -w /home/jenkins/public_html/${params.Branch}/ apache-cnt-${params.phpVer} bin/ci-scripts/install_db_test.sh"
                #./bin/console cache:clear --env=prod
           }
        }
*/
        /*
        stage ('Database') {
            steps {
                sh 'psql -w -h ${DBHOST} -c  "update sil_ecommerce_channel set hostname='sandboxrd.libre-informatique.fr';" -U ${DBROOTUSER} -d ${DBAPPNAME}'
            }
        }

        stage ('Cache Clear') {
            steps {
                sh "bin/console cache:clear --env=prod"
            }
        }
        */
        /* Todo add a step to handle database */
    }
    post {
        always {
            cleanWs()

        }
    }
}
