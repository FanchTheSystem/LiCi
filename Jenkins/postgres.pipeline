pipeline {
    agent any

    parameters {
        string(defaultValue: '9.6', description: 'Version of Postgres', name: 'Version')
    }

    environment {
        Password = 'postgres24'
        Hostname = 'postgres.host'
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {
        stage ('Stop') {
            steps {
                sh "docker container stop ${env.Hostname} || echo ok"
                sh "docker container rm ${env.Hostname} || echo ok"
            }
        }

        stage ('Run') {
            steps {
                 sh "docker run -dt --network=ci.network --name ${env.Hostname} -e POSTGRES_PASSWORD=${env.Password} postgres:${params.Version}"
            }
        }

        stage ('Set Env')
        {
            steps {
                sh "docker exec etcd.host etcdctl put /default/postgres/hostname ${env.Hostname}"
                /* hum need to env var this too ? */
                sh "docker exec etcd.host etcdctl put /default/postgres/root/username postgres"
                sh "docker exec etcd.host etcdctl put /default/postgres/root/password ${env.Password}"
                /* Maybe add also version in a env variable to install the good client on docker image */
                sh "docker exec etcd.host etcdctl get --prefix '/default'"
            }
        }
    }

    post {
        always {
            cleanWs()
        }

        success {
            build job: 'Start Confd', parameters: [string(name: 'Version', value: '0.15.0')], wait: false
        }
    }
}
