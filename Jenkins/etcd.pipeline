pipeline {
    agent any

    parameters {
        string(defaultValue: '3.3.1', description: 'Version of Etcd', name: 'Version')
    }

    environment {
        Hostname = 'etcd.host'
    }


    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {
        stage ('Stop') {
            steps {
                sh "docker container stop ${env.Hostname} || echo ok"
                sh "docker container rm ${env.Hostname} || echo ok"
            }
        }

        stage ('Build') {
            steps {
                sh "docker build --build-arg ETCDVER=${params.Version} -t etcd-img-${params.Version} -f Docker/etcd.dockerfile ."
            }
        }

        stage ('Run') {
            steps {
                sh "docker run -dit -p 2379:2379 --network=ci.network --name ${env.Hostname} etcd-img-${params.Version}"
            }
        }

        stage ('Status') {
            steps {
                sh "docker exec -u root ${env.Hostname} etcd --version"
            }
        }

    }

    post {
        always {
            cleanWs()
        }

        success {
            build job: 'Start Postgres', parameters: [string(name: 'Version', value: '9.4')], wait: false
            build job: 'Start Elastic', parameters: [string(name: 'Version', value: '611')], wait: false
        }
    }
}
