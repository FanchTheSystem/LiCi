pipeline {
    agent any

    parameters {
        string(defaultValue: '3.3.1', description: 'Version of Etcd', name: 'Version')
    }

    environment {
        Hostname = 'etcd.host'
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    stages {
        stage ('Stop') {
            steps {
                sh "docker container stop ${env.Hostname} || echo ok"
                sh "docker container rm ${env.Hostname} || echo ok"
            }
        }

        stage ('Build') {
            steps {
                sh "docker build --build-arg ETCDVER=${params.Version} --build-arg UID=`id -u` --build-arg GID=`id -g` -t etcd-img-${params.Version} -f Docker/etcd.dockerfile ."
            }
        }

        stage ('Run') {
            steps {
                sh "docker run -dt -p 2379:2379 --network=ci.network --name ${env.Hostname} etcd-img-${params.Version}"
            }
        }

        stage ('Status') {
            steps {
                sh "docker exec ${env.Hostname} etcd --version"
            }
        }

    }

    post {
        always {
            cleanWs()
        }

        success {
            /* Warning: need 'Start Apache as job Name in Jenkins */
            build job: 'Start Apache', parameters: [string(name: 'phpVersion', value: '5.6')], wait: false
            build job: 'Start Apache', parameters: [string(name: 'phpVersion', value: '7.1')], wait: false
            /*  build job: 'Start Apache', parameters: [string(name: 'phpVersion', value: '7.2')], wait: false */
            build job: 'Start Postgres', wait: false
            build job: 'Start Elastic', wait: false
            build job: 'Start Selenium', wait: false
        }
    }
}
