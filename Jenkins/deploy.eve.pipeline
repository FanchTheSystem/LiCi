pipeline {
    agent any

    parameters {
        string(defaultValue: '5.6', description: 'Version of Php', name: 'phpVer')
        string(defaultValue: 'E-venement', description: 'Project Name', name: 'Project')
        string(defaultValue: 'master', description: 'Git(or job) Branch Name', name: 'Branch')
        string(defaultValue: 'master', description: 'Name of the deploiement, may change the target directory or serveur', name: 'Name')
        string(defaultValue: 'seti.libre-informatique.fr', description: 'Base Url', name: 'apacheUrl')
    }

    environment {
        apachePort = sh(returnStdout: true, script: "echo 80${params.phpVer} | sed -e s/'\\.'//g").trim()
        Target = "$HOME/public_html/${params.Project}"
        DockerTarget="/home/jenkins/public_html/${params.Project}"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {

        stage ('Check Apache') {
            steps {
                sh "docker exec -u root apache-cnt-${params.phpVer} service apache2 status"
                /* todo : maybe remove user dir and use real apache vhost */
                sh "docker exec -u root apache-cnt-${params.phpVer} mkdir -p ${env.DockerTarget}/${params.Name}"
                sh "docker exec -u root apache-cnt-${params.phpVer} chown -R jenkins:www-data ${env.DockerTarget}/${params.Name}"

            }
        }

        stage ('get Archive') {
            steps {
                sh "docker exec -u jenkins:www-data apache-cnt-${params.phpVer} wget -q http://seti.libre-informatique.fr:8056/~jenkins/repo/E-venement/Eve_${params.Branch}.tar.gz -O ${env.DockerTarget}/${params.Name}/Eve_${params.Branch}.tar.gz"
                }
        }

        stage ('Deploy Archive') {
            steps {
                sh "docker exec -u jenkins:www-data -w ${env.DockerTarget}/${params.Name}/ apache-cnt-${params.phpVer} tar -xf Eve_${params.Branch}.tar.gz"
            }
        }


        stage ('Set Owner and Right ') {
            steps {
                /* todo : maybe remove user dir and use real apache vhost */
                sh "docker exec -u root apache-cnt-${params.phpVer} chown -R jenkins:www-data ${env.DockerTarget}/${params.Name}"
                sh "docker exec -u root apache-cnt-${params.phpVer} chmod -R 775 ${env.DockerTarget}/${params.Name}"
            }
        }

        stage ('Symfony cc') {
            steps {
                sh "docker exec -u jenkins:www-data -w ${env.DockerTarget}/${params.Name}/ apache-cnt-${params.phpVer} ./symfony cc"
            }
        }

        stage ('Set Name and Description') {
            steps {
                script {
                    currentBuild.displayName = "#${BUILD_NUMBER} Deploy Copy ${params.Project} (${params.Branch})"
                    currentBuild.description = "<a href='http://${params.apacheUrl}:${env.apachePort}/~jenkins/${params.Project}/${params.Name}/web'>Link To Instance</a>"
                }
            }
        }


    }
    post {
        always {
            cleanWs()

        }
    }
}
