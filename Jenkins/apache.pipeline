pipeline {
    agent any

    parameters {
        string(defaultValue: '7.1', description: 'Version of Php', name: 'phpVersion')
        choice(choices: 'php\nphp-fpm', description: 'Mod Php', name: 'phpMod')
        /* string(defaultValue: 'php', description: 'Mod Php', name: 'phpMod') */
    }

    environment {
        apachePort = sh(returnStdout: true, script: "echo 8`echo ${params.phpMod}| tr '-' ' ' | wc -w`${params.phpVersion} | sed -e s/'\\.'//g").trim()
        apacheUrl = 'seti.libre-informatique.fr'
     }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
    }

    stages {
        stage ('Set Name and Description') {
            steps {
                script {
                    currentBuild.displayName = "#${BUILD_NUMBER} Apache/${params.phpMod} ${params.phpVersion}"
                    currentBuild.description = "<a href='http://${env.apacheUrl}:${env.apachePort}/phpinfo.php'>Link To Php Info</a>"
                }
            }
        }

        stage ('Prepare') {
            steps {
                sh "mkdir -p ${HOME}/public_html"
            }
        }

        stage ('Stop') {
            steps {
                sh "docker container stop apache-${params.phpMod}-cnt-${params.phpVersion} || echo ok"
                sh "docker container rm apache-${params.phpMod}-cnt-${params.phpVersion} || echo ok"
            }
        }

        stage ('Build') {
            steps {
                sh "docker build --build-arg PHPMOD=${params.phpMod} --build-arg PHPVER=${params.phpVersion} --build-arg UID=`id -u` --build-arg GID=`id -g` -t apache-${params.phpMod}-img-${params.phpVersion} -f Docker/apache.dockerfile ."
            }
        }

        stage ('Run') {
            steps {
                sh "docker run -dt -p ${env.apachePort}:80 --network=ci.network  --volume ${HOME}/public_html:/home/jenkins/public_html --name apache-${params.phpMod}-cnt-${params.phpVersion} apache-${params.phpMod}-img-${params.phpVersion}"
            }
        }

        stage ('Status') {
            steps {
                sh "sleep 3 # wait apache restarting (in previous docker run)"
                sh "docker exec -u root apache-${params.phpMod}-cnt-${params.phpVersion} service apache2 status"
                sh "docker exec apache-${params.phpMod}-cnt-${params.phpVersion} php --version"
            }
        }

        stage ('Set Env') {
            steps {
                sh "docker exec etcd.host etcdctl put /default/apache-${params.phpMod}/${params.phpVersion}/hostname apache-${params.phpMod}-cnt-${params.phpVersion}"
                sh "docker exec etcd.host etcdctl put /default/apache-${params.phpMod}/${params.phpVersion}/port ${env.apachePort}"
                sh "docker exec etcd.host etcdctl put /default/apache-${params.phpMod}/${params.phpVersion}/servername ${env.apacheUrl}"
                sh "docker exec etcd.host etcdctl get --prefix '/default'"
            }
        }

    }

    post {
        always {
            cleanWs()
        }
    }
}
